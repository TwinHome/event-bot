Title: OpenAI API With Python Tuorial 1-ChatCompletion API and Completion API
Duration: 0:36:38
Description: github code: https://github.com/krishnaik06/OPENAI-API-Tutorials
Welcome to the OpenAI Tutorials with Python, your gateway to unleashing the immense potential of Artificial Intelligence (AI). In this comprehensive video series, we dive deep into the world of OpenAI, an industry-leading AI research organization, and guide you step-by-step through various practical applications using Python.

Whether you're a beginner or an experienced developer, this tutorial series is designed to empower you with the knowledge and skills to harness the power of AI and machine learning. We cover a wide range of topics, including natural language processing (NLP), computer vision, reinforcement learning, and much more.
►Data Science Projects: 
https://www.youtube.com/watch?v=S_F_c9e2bz4&list=PLZoTAELRMXVPS-dOaVbAux22vzqdgoGhG&pp=iAQB

►Learn In One Tutorials

Statistics in 6 hours: https://www.youtube.com/watch?v=LZzq1zSL1bs&t=9522s&pp=ygUVa3Jpc2ggbmFpayBzdGF0aXN0aWNz

Machine Learning In 6 Hours: https://www.youtube.com/watch?v=JxgmHe2NyeY&t=4733s&pp=ygUba3Jpc2ggbmFpayBtYWNoaW5lIGxlYXJuaW5n

Deep Learning 5 hours : https://www.youtube.com/watch?v=d2kxUVwWWwU&t=1210s&pp=ygUYa3Jpc2ggbmFpayBkZWVwIGxlYXJuaW5n


►Learn In a Week Playlist

Statistics:https://www.youtube.com/watch?v=11unm2hmvOQ&list=PLZoTAELRMXVMgtxAboeAx-D9qbnY94Yay

Machine Learning : https://www.youtube.com/watch?v=z8sxaUw_f-M&list=PLZoTAELRMXVPjaAzURB77Kz0YXxj65tYz

Deep Learning:https://www.youtube.com/watch?v=8arGWdq_KL0&list=PLZoTAELRMXVPiyueAqA_eQnsycC_DSBns

NLP : https://www.youtube.com/watch?v=w3coRFpyddQ&list=PLZoTAELRMXVNNrHSKv36Lr3_156yCo6Nn

►Detailed Playlist:

Stats For Data Science In Hindi : https://www.youtube.com/watch?v=7y3XckjaVOw&list=PLTDARY42LDV6YHSRo669_uDDGmUEmQnDJ&pp=gAQB

Machine Learning In English : https://www.youtube.com/watch?v=bPrmA1SEN2k&list=PLZoTAELRMXVPBTrWtJkn3wWQxZkmTXGwe

Machine Learning In Hindi : https://www.youtube.com/watch?v=7uwa9aPbBRU&list=PLTDARY42LDV7WGmlzZtY-w9pemyPrKNUZ&pp=gAQB

Complete Deep Learning: https://www.youtube.com/watch?v=YFNKnUhm_-s&list=PLZoTAELRMXVPGU70ZGsckrMdr0FteeRUi
Thumbnail URL: https://i.ytimg.com/vi/CbpsDMwFG2g/hqdefault.jpg

[00:00 - 00:02] hello all my name is krishnaik and
[00:02 - 00:03] welcome to my YouTube channel so guys
[00:03 - 00:05] from past many days many people are
[00:05 - 00:08] requesting for the open AI tutorials so
[00:08 - 00:10] finally here I am I'm going to now
[00:10 - 00:12] create a lot of videos related to open
[00:12 - 00:15] AI apis itself and if you don't know
[00:15 - 00:17] about it open AI provides a lot of API
[00:17 - 00:19] to access various llm models to perform
[00:19 - 00:22] various tasks
[00:22 - 00:24] um the prerequisite to start this series
[00:24 - 00:26] you know is just Python programming
[00:26 - 00:29] language so if you know how to use
[00:29 - 00:30] Python programming language if you know
[00:30 - 00:32] how to probably implement a lot of
[00:32 - 00:34] functionalities if you know about
[00:34 - 00:36] different data structures I think that
[00:36 - 00:37] will be more than sufficient to start
[00:37 - 00:39] with along with that one thing you
[00:39 - 00:41] really need to understand is that with
[00:41 - 00:44] respect to open AI the documentation is
[00:44 - 00:45] given in a very much Clear way so
[00:45 - 00:47] whenever we are doing the programming
[00:47 - 00:49] always make sure that you refer to the
[00:49 - 00:51] documentation also so let's go without
[00:51 - 00:54] wasting any time let's go towards this
[00:54 - 00:56] tutorial and I feel right now I am
[00:56 - 00:58] seeing like many of my students are
[00:58 - 01:00] directly using this open AI API itself
[01:00 - 01:03] to create to in their specific
[01:03 - 01:06] end-to-end projects because open AI API
[01:06 - 01:09] definitely gives you state of art models
[01:09 - 01:10] you know which can actually perform some
[01:10 - 01:13] amazing tasks specifically with respect
[01:13 - 01:15] to NLP right so without wasting any time
[01:15 - 01:17] let's go ahead and I will start sharing
[01:17 - 01:21] my screen now what we will do is that uh
[01:21 - 01:23] I will start completely from scratch so
[01:23 - 01:25] please do make sure that you follow me
[01:25 - 01:28] with respect to this and you can also
[01:28 - 01:31] practice along with me uh I'm not going
[01:31 - 01:33] to uh you know Skip any part if there is
[01:33 - 01:35] some errors that are coming I'm going to
[01:35 - 01:38] make sure that that error is resolved
[01:38 - 01:39] then and there so I'm not going to edit
[01:39 - 01:42] anything as such as we go ahead now the
[01:42 - 01:44] first thing first uh what I'll do I'm
[01:44 - 01:46] inside my open AI folder so this is the
[01:46 - 01:48] folder location that I am probably going
[01:48 - 01:50] to create I will just go and write open
[01:50 - 01:52] with code sorry click on open with code
[01:52 - 01:55] so this will open my vs code okay so I'm
[01:55 - 01:57] trying to show you at least from like
[01:57 - 02:00] completely from scratch it'll be amazing
[02:00 - 02:01] you will be able to learn a lot of
[02:01 - 02:03] things itself right so once you have
[02:03 - 02:06] opened your Visual Studio code what I'm
[02:06 - 02:09] actually going to do now is that first
[02:09 - 02:10] of all as usual we will go ahead and
[02:10 - 02:12] create a
[02:12 - 02:15] new environment okay so here is my new
[02:15 - 02:16] environment so for creating the new
[02:16 - 02:18] environment in the command prompt in the
[02:18 - 02:20] terminal what I can do I will just open
[02:20 - 02:21] command prompt you can also do it in
[02:21 - 02:24] Powershell but I feel I work really well
[02:24 - 02:26] in Windows command prompt itself I've
[02:26 - 02:28] also worked in git bash and Powershell
[02:28 - 02:30] it is up to you whatever technique you
[02:30 - 02:31] specifically want to use or whatever
[02:31 - 02:33] tools that is up to you so here I'm
[02:33 - 02:35] going to create contact create minus p
[02:35 - 02:38] and the type of environment that I am
[02:38 - 02:40] probably going to create is that I will
[02:40 - 02:42] make sure that I will create a folder
[02:42 - 02:43] over here itself and all the packages
[02:43 - 02:45] will be installed over here
[02:45 - 02:47] and the importance of creating an
[02:47 - 02:48] environment because I just want to work
[02:48 - 02:50] with open AI apis itself right so
[02:50 - 02:51] whatever libraries is specifically
[02:51 - 02:53] required for this I will only be
[02:53 - 02:55] installing that so conduct create minus
[02:55 - 02:58] P my environment name let's say V and V
[02:58 - 03:00] and then I will give my python version
[03:00 - 03:03] is equal to 3.9 okay so I'm going to go
[03:03 - 03:06] with python 3.9 and along with this uh I
[03:06 - 03:10] will also give minus y right dash y so
[03:10 - 03:12] that if it is asking for me any prompt
[03:12 - 03:14] like yes or no it will automatically be
[03:14 - 03:17] taken right so here uh is where your
[03:17 - 03:19] installation is basically happening now
[03:19 - 03:21] you will be able to see over here your V
[03:21 - 03:23] and V environment will be created right
[03:23 - 03:25] now after that I will activate this
[03:25 - 03:27] environment and we'll start it till then
[03:27 - 03:28] the environment is getting installed or
[03:28 - 03:30] created what I will do I will go ahead
[03:30 - 03:34] and create my requirement.txt
[03:34 - 03:38] requirements.txt okay and for this I
[03:38 - 03:41] will be using open AI Library let's say
[03:41 - 03:44] I want to use pandas numpy these are
[03:44 - 03:46] some good Library is that needs to be
[03:46 - 03:49] used over here and one more library that
[03:49 - 03:51] I am specifically going to use let's see
[03:51 - 03:52] first of all whether this has got
[03:52 - 03:55] activated yes it has got activated uh
[03:55 - 03:57] the next library that I am basically
[03:57 - 03:59] going to use but before this let's go
[03:59 - 04:01] ahead and activate this so conda
[04:01 - 04:03] activate
[04:03 - 04:07] V and B slash okay so once I am inside
[04:07 - 04:09] this specific environment uh
[04:09 - 04:12] uh that basically means I'm accessing
[04:12 - 04:14] this environment itself right now the
[04:14 - 04:16] next thing what I'm actually going to do
[04:16 - 04:18] over here is that I will also go ahead
[04:18 - 04:21] and uh yeah install all these libraries
[04:21 - 04:23] so here what I'm going to do I'll go and
[04:23 - 04:26] save this and let me go ahead and do the
[04:26 - 04:29] PIP installation pip install minus r
[04:29 - 04:31] requirement
[04:31 - 04:33] requirement.txt so let's wait this
[04:33 - 04:35] particular requirement dot txt will get
[04:35 - 04:39] installed okay and the reason why I'm
[04:39 - 04:40] installing only this because I'm going
[04:40 - 04:42] to use only this okay okay one more
[04:42 - 04:44] Library I've actually missed let me
[04:44 - 04:46] write it down so that this will be
[04:46 - 04:50] python dot EnV this specifically
[04:50 - 04:51] whenever you create an environment
[04:51 - 04:53] variable you will be able to load those
[04:53 - 04:54] variables that basically means this
[04:54 - 04:56] Library will be responsible in finding
[04:56 - 04:57] which all environment variables are
[04:57 - 04:59] available over here and it will be able
[04:59 - 05:01] to use it okay so that is the reason I
[05:01 - 05:02] also need to install this specific
[05:02 - 05:04] Library which is called as python.anv
[05:04 - 05:07] okay so this is there so let me do one
[05:07 - 05:09] main thing let me just go ahead and
[05:09 - 05:11] create get my one e and B file I'll tell
[05:11 - 05:14] you why I'm actually creating dot EnV
[05:14 - 05:15] file because there is a reason right
[05:15 - 05:19] whenever we probably start with open AI
[05:19 - 05:21] you know you have to probably create an
[05:21 - 05:24] API right so if you probably go once you
[05:24 - 05:26] log in right so let's say you are in
[05:26 - 05:29] open AI right so open AI over here once
[05:29 - 05:31] you log in inside this right once you
[05:31 - 05:33] log in inside this you will be taken to
[05:33 - 05:35] this page and from here what you can do
[05:35 - 05:38] you will be able to see view API keys
[05:38 - 05:40] and here are a lot of apis queries that
[05:40 - 05:41] are created because you're exploring
[05:41 - 05:43] multiple things over here what you need
[05:43 - 05:45] to do is that just go ahead and create a
[05:45 - 05:47] new key go ahead and write the name over
[05:47 - 05:50] here and just click on create secret key
[05:50 - 05:52] and you have to copy the key the key
[05:52 - 05:56] will basically start from SK right so I
[05:56 - 05:58] have already created a key which I'm
[05:58 - 06:01] actually going to use okay and that is
[06:01 - 06:03] the reason why I have actually created
[06:03 - 06:06] this dot EnV okay and here you can see
[06:06 - 06:07] the installation has happened let me
[06:07 - 06:09] just go ahead and install it once again
[06:09 - 06:11] because in requirement.txt you have
[06:11 - 06:14] python dot EnV okay I will give you each
[06:14 - 06:15] and every of these things uh
[06:15 - 06:17] specifically in the GitHub but I'll not
[06:17 - 06:19] give you the key okay key will not be
[06:19 - 06:21] possible you have to create your own key
[06:21 - 06:24] now the main question Rises that whether
[06:24 - 06:25] you will be able to use the free account
[06:25 - 06:27] yes obviously you'll be able to use the
[06:27 - 06:29] free accounts I will talk about the
[06:29 - 06:31] model pricing how the pricing happens
[06:31 - 06:33] pricing usually happens based on token
[06:33 - 06:35] size and for the free account it just
[06:35 - 06:37] provides you 18 okay so let me just go
[06:37 - 06:39] ahead and explain everything about that
[06:39 - 06:41] first of all what I will do is that I
[06:41 - 06:43] will go ahead and create one key value
[06:43 - 06:46] pair on the name of or open underscore
[06:46 - 06:50] sorry open AI underscore API underscore
[06:50 - 06:53] key okay now
[06:53 - 06:56] this key will probably start with SK and
[06:56 - 06:58] the entire kit itself okay so what I'm
[06:58 - 07:00] actually going to do is that I will just
[07:00 - 07:02] go ahead and set this environment key
[07:02 - 07:04] and then we will probably start the
[07:04 - 07:06] programming part okay so let me pause
[07:06 - 07:08] the video just for this instance so that
[07:08 - 07:10] I can just paste this and then we will
[07:10 - 07:12] go ahead and continue okay
[07:12 - 07:14] so guys I have updated the environment
[07:14 - 07:16] key so I'll again not open it so that
[07:16 - 07:19] you see those keys itself anyhow if you
[07:19 - 07:20] see also I'll delete it probably after
[07:20 - 07:22] recording this particular video now
[07:22 - 07:24] let's go ahead and go through the
[07:24 - 07:26] documentation of opening act understand
[07:26 - 07:29] guys the real content okay I will be
[07:29 - 07:32] able to explain you out many of the
[07:32 - 07:33] things but again if you really want to
[07:33 - 07:36] see the documentation you need to be
[07:36 - 07:38] dependent on this website of open AI so
[07:38 - 07:40] if I probably go ahead and click on the
[07:40 - 07:42] documentation what all things
[07:42 - 07:44] specifically we are going to learn with
[07:44 - 07:47] respect to open AI now um
[07:47 - 07:50] first of all you need to understand open
[07:50 - 07:52] AI API itself they provides what kind of
[07:52 - 07:55] models okay so here are mostly all the
[07:55 - 07:57] models that are probably given to you
[07:57 - 08:00] like GPT 4 GPT 3.5 you know daily
[08:00 - 08:03] specifically for images whisper is
[08:03 - 08:05] basically for audio
[08:05 - 08:07] embeddings moderation moderation is
[08:07 - 08:10] specifically to understand uh to detect
[08:10 - 08:12] whether a text is safe or unsafe right
[08:12 - 08:14] GPD 3 and initial even charge GPT came
[08:14 - 08:17] it came with GPT 3 then it went to gbt
[08:17 - 08:20] 3.5 now it is also having gpt4 so if you
[08:20 - 08:21] already have a paid account you'll also
[08:21 - 08:23] be able to access gpt4
[08:23 - 08:25] so all these things are there and if I
[08:25 - 08:28] probably deep dive like what all models
[08:28 - 08:29] are specifically there here you'll be
[08:29 - 08:31] able to see in Jeopardy 3.5 you have
[08:31 - 08:34] this models this models in gpt4 all this
[08:34 - 08:35] information is basically there we'll
[08:35 - 08:37] also understand there's a concept of
[08:37 - 08:39] something called as token because the
[08:39 - 08:41] entire GPD model specifically Works
[08:41 - 08:43] based on tokens okay we will go step by
[08:43 - 08:45] step we'll try to understand now
[08:45 - 08:48] whenever we try to use GPT 4 or GPT 3.5
[08:48 - 08:51] we need to use something called as chat
[08:51 - 08:53] completion API now what exactly is this
[08:53 - 08:55] API don't worry about it I will just try
[08:55 - 08:58] to explain you with examples chat
[08:58 - 09:00] completion API will be super important
[09:00 - 09:01] when you are probably trying to
[09:01 - 09:03] implement some chat Bots kind of stuff
[09:03 - 09:05] you know where you have conversational
[09:05 - 09:08] uh happening from both agents and the
[09:08 - 09:10] end user itself right so in gpt4 you
[09:10 - 09:12] have all these specific models in GPD
[09:12 - 09:16] 3.5 you have GPT 3.5 turbo you have this
[09:16 - 09:18] you have this all these models are there
[09:18 - 09:20] now what is the exact difference between
[09:20 - 09:22] all these models
[09:22 - 09:24] um if I probably try to show you with
[09:24 - 09:25] respect to this particular playground
[09:25 - 09:28] okay and if you probably select any of
[09:28 - 09:30] the model let's say in GPT 3 I'm
[09:30 - 09:34] selecting text DaVinci z003 so in gpt3
[09:34 - 09:36] this is the most capable model in GPT 3
[09:36 - 09:38] Series can perform any task other than
[09:38 - 09:40] gpt3 models can so all those information
[09:40 - 09:42] is basically there and if you really
[09:42 - 09:44] want to understand about each energy
[09:44 - 09:46] model you can just probably go ahead and
[09:46 - 09:48] see from this documentation itself but
[09:48 - 09:50] don't worry with respect to coding I
[09:50 - 09:52] will be explaining you you don't have to
[09:52 - 09:54] even worry about anything right so here
[09:54 - 09:56] also you'll be able to see GPT 3.5 when
[09:56 - 09:59] we say GPT 3.5 that basically the most
[09:59 - 10:02] capable GPT 3.5 model is basically this
[10:02 - 10:05] one GPD 3.5 turbo right so here you can
[10:05 - 10:06] see most capable GPT three point model
[10:06 - 10:09] and optimized for chat at one tenth of
[10:09 - 10:12] the price of text davinc c003 now where
[10:12 - 10:14] does this text around say 0 0 3 comes
[10:14 - 10:16] over here right again it is a kind of
[10:16 - 10:18] GPT itself and all these models you'll
[10:18 - 10:21] be able to see what is the max tokens
[10:21 - 10:23] right so this basically says that GPT
[10:23 - 10:26] 3.5 I can give you a better accuracy the
[10:26 - 10:28] speed may be little bit less but yes it
[10:28 - 10:30] will give you some kind of accuracy so
[10:30 - 10:33] if you probably use this text DaVinci
[10:33 - 10:35] and probably see any kind of results
[10:35 - 10:37] better results will be given by GPT 3.5
[10:37 - 10:40] turbo right and based on the number of
[10:40 - 10:41] inputs and the outputs that you are
[10:41 - 10:43] probably getting that is how the charges
[10:43 - 10:45] happen and that is basically computed
[10:45 - 10:47] with the help of tokens I will explain
[10:47 - 10:48] you each and everything guys don't worry
[10:48 - 10:51] about it but I just want to show you all
[10:51 - 10:53] these things before we go ahead uh this
[10:53 - 10:55] was about chat completion API whenever
[10:55 - 10:59] we want to use GPT 4 GPT 3.5 but if I
[10:59 - 11:03] say GPT 3 see GPT 3 is another uh gptc
[11:03 - 11:05] can understand and generate natural
[11:05 - 11:07] language so whenever I see this kind of
[11:07 - 11:09] models right this will be a completion
[11:09 - 11:12] API not chat completion API completion
[11:12 - 11:15] API okay so let's I think I have spoken
[11:15 - 11:18] many more things as we went ahead now
[11:18 - 11:20] let me do one thing let me just go ahead
[11:20 - 11:26] and say test open AI open AI dot i p y
[11:26 - 11:28] and B okay so this is basically my
[11:28 - 11:30] Jupiter notebook here I will try to
[11:30 - 11:31] write down all the coding and
[11:31 - 11:34] requirement.txt uh I'll not use
[11:34 - 11:36] requirement.txt I will just go ahead and
[11:36 - 11:37] open my terminal
[11:37 - 11:40] okay and here what I'm actually going to
[11:40 - 11:42] do I'm going to just install one more
[11:42 - 11:44] Library which is called as pip install
[11:44 - 11:46] IPI kernel the reason why I'm doing this
[11:46 - 11:48] is that because I will be able to use
[11:48 - 11:50] the Jupiter notebook itself right over
[11:50 - 11:52] there and we specifically need to have
[11:52 - 11:54] this library because it will be able to
[11:54 - 11:56] select the kernel okay so once this is
[11:56 - 11:58] done then we will go ahead and start
[11:58 - 12:00] writing our code now once we start
[12:00 - 12:01] writing a code it would be quite amazing
[12:01 - 12:03] because now is the time that you will be
[12:03 - 12:05] able to understand everything whatever
[12:05 - 12:08] actually saying okay uh I've just given
[12:08 - 12:09] you ideas about some of the other things
[12:09 - 12:11] and whenever the documentation is
[12:11 - 12:12] specifically required I will help you
[12:12 - 12:15] out with that because understanding your
[12:15 - 12:17] documentation is important it probably
[12:17 - 12:19] took me one week to get comfortable with
[12:19 - 12:22] the document then I was able to map each
[12:22 - 12:24] and every points over there so this
[12:24 - 12:26] installation is done now what I will do
[12:26 - 12:28] I will go ahead and select my kernel so
[12:28 - 12:30] my kernel is python 3.97 let's see
[12:30 - 12:32] whether it is working fine or not one
[12:32 - 12:35] plus one done right now the first thing
[12:35 - 12:37] first uh what should we import Okay so
[12:37 - 12:39] first of all I will go ahead and import
[12:39 - 12:41] open AI because this is the library that
[12:41 - 12:43] I'm probably going to use it along with
[12:43 - 12:45] this let's see whether this is working
[12:45 - 12:47] fine or not open AI yes it's working
[12:47 - 12:49] fine absolutely working fine along with
[12:49 - 12:51] this uh if you remember I have also
[12:51 - 12:54] imported dot EnV and I will go ahead and
[12:54 - 12:58] import load underscore dot EnV right and
[12:58 - 12:59] why we specifically required this
[12:59 - 13:01] because uh
[13:01 - 13:03] with respect to load dot EnV it will be
[13:03 - 13:05] able to understand that what environment
[13:05 - 13:07] values we have actually put it'll be
[13:07 - 13:09] able to load that okay along with this I
[13:09 - 13:12] will also go ahead and import OS let's
[13:12 - 13:14] see import
[13:14 - 13:16] OS okay
[13:16 - 13:18] now what I will do I will write openai
[13:18 - 13:20] dot API
[13:20 - 13:23] underscore key first of all I need to
[13:23 - 13:26] set this specific key okay open AI dot
[13:26 - 13:27] API underscore key so for that I will
[13:27 - 13:31] write OS dot get
[13:31 - 13:33] OS Dot
[13:33 - 13:37] get
[13:37 - 13:42] EnV with my open AI key so what was the
[13:42 - 13:44] key name that I had actually mentioned
[13:44 - 13:46] open AI underscore API underscore key
[13:46 - 13:49] right so once we do this that basically
[13:49 - 13:51] means our API key will get loaded now
[13:51 - 13:53] okay now let me just go ahead and make
[13:53 - 13:56] some sales that basically means uh I've
[13:56 - 13:58] set up my key and this key is important
[13:58 - 14:00] if this is not set up your open AI will
[14:00 - 14:02] not be able to work okay now the first
[14:02 - 14:05] thing first as suggested right like how
[14:05 - 14:06] many different types of models
[14:06 - 14:08] specifically open AI has so what I will
[14:08 - 14:10] actually do I will just go ahead and
[14:10 - 14:14] import pandas okay pandas and I will
[14:14 - 14:18] write over here
[14:18 - 14:19] open AI
[14:19 - 14:23] Dot model dot list if I basically go
[14:23 - 14:27] ahead and write like this okay and if I
[14:27 - 14:28] execute it you will be able to see a lot
[14:28 - 14:30] of things that will be shown away okay
[14:30 - 14:32] so like this you will be able to see a
[14:32 - 14:35] list of data so if I probably pick up
[14:35 - 14:38] this specific data as a key I will be
[14:38 - 14:40] able to see all my models see first the
[14:40 - 14:43] model name is whisper then you have
[14:43 - 14:45] another model like this you have
[14:45 - 14:47] something like query and all and there
[14:47 - 14:48] are many models which has been hidden
[14:48 - 14:50] right now if you really want to see in a
[14:50 - 14:53] detailed uh manner what I can
[14:53 - 14:55] specifically do is that I can basically
[14:55 - 14:58] write PD dot data frame and let me give
[14:58 - 15:01] this entire thing over here so once I do
[15:01 - 15:03] this so this is my entire model so over
[15:03 - 15:04] here you'll be able to see right so
[15:04 - 15:07] DaVinci this this this this is there but
[15:07 - 15:09] anytime you want to refer what models to
[15:09 - 15:10] be used I will be explaining you with
[15:10 - 15:13] respect to that okay now let me show you
[15:13 - 15:15] the magic and what all things you can
[15:15 - 15:17] achieve from this okay two things we are
[15:17 - 15:19] going to discuss one is the chart
[15:19 - 15:21] completion API
[15:21 - 15:25] okay API and another one is the
[15:25 - 15:28] completion API so let me just first of
[15:28 - 15:30] all start with the completion API
[15:30 - 15:32] because this actually starts with gpt3
[15:32 - 15:35] right gpd3 models right so completion
[15:35 - 15:37] API so here what I will do I will say
[15:37 - 15:39] open AI Dot
[15:39 - 15:44] completion dot create sorry completion
[15:44 - 15:48] dot create okay and this is how we
[15:48 - 15:50] specifically use the completion API okay
[15:50 - 15:52] here the first thing that we
[15:52 - 15:54] specifically give is my model name okay
[15:54 - 15:57] the second thing uh that we uh give in
[15:57 - 15:59] this is that after we provide the model
[15:59 - 16:02] name you know we also need to make sure
[16:02 - 16:04] that we provide the prompt okay prompt
[16:04 - 16:06] basically means what kind of input I
[16:06 - 16:09] want to probably give like this right so
[16:09 - 16:11] let's say I will go ahead and write over
[16:11 - 16:15] here what is the capital of
[16:15 - 16:17] India right something like this so let's
[16:17 - 16:18] say this is my message that I really
[16:18 - 16:20] want to give over here now from this
[16:20 - 16:23] model how you will be able to select
[16:23 - 16:24] which model over here again you go to
[16:24 - 16:26] the documentation which model is superb
[16:26 - 16:28] for this gpt3 let's go ahead and say
[16:28 - 16:30] I'll set this because this is very
[16:30 - 16:33] capable this is fast and lower cost than
[16:33 - 16:35] Diamond C so I will copy this and I will
[16:35 - 16:37] go ahead and open this right
[16:37 - 16:39] and I will just go ahead and write my
[16:39 - 16:42] model name right the order that is
[16:42 - 16:43] basically given over there you can
[16:43 - 16:46] specifically use that okay now this is
[16:46 - 16:48] the
[16:48 - 16:50] just this much okay now what I will do I
[16:50 - 16:51] will store this in a variable which is
[16:51 - 16:54] called as response okay
[16:54 - 16:56] or if I don't want to use the response
[16:56 - 16:59] let me just see the output okay now see
[16:59 - 17:01] I asked the question what is the capital
[17:01 - 17:03] of India and the answer is the capital
[17:03 - 17:06] of India is New Delhi okay I'm getting
[17:06 - 17:08] the output it's amazing inside the
[17:08 - 17:10] choices right so what I will do first of
[17:10 - 17:12] all I will just go ahead and write my
[17:12 - 17:15] responses so this is my response and let
[17:15 - 17:16] me just go ahead and print with the
[17:16 - 17:19] response so this will be my response
[17:19 - 17:21] okay now inside the responses I I have
[17:21 - 17:23] got the output also capital of India's
[17:23 - 17:26] New Delhi will understand each and
[17:26 - 17:27] everything in the finished region what
[17:27 - 17:29] this is everything what is this prompt
[17:29 - 17:31] token everything I will make you
[17:31 - 17:32] understand okay so first of all let's go
[17:32 - 17:36] with this uh total tokens okay so total
[17:36 - 17:40] tokens over here was basically as 17
[17:40 - 17:43] prompt token is seven okay now what how
[17:43 - 17:46] exactly this seven came see what is the
[17:46 - 17:48] capital of India was the question okay
[17:48 - 17:52] and probably if I copy this and go to
[17:52 - 17:55] and search just for open AI
[17:55 - 17:58] tokens okay whenever we give any
[17:58 - 18:01] sentence right whenever we give any
[18:01 - 18:04] sentence with respect to gpt3 let's say
[18:04 - 18:06] I'm pasting this you can see over here
[18:06 - 18:09] all this entire sentence is basically
[18:09 - 18:11] divided into tokens and it can show that
[18:11 - 18:14] okay what is basically over here is is
[18:14 - 18:16] from this page to this is you have the
[18:16 - 18:18] second word then from this page to this
[18:18 - 18:20] the you have the third word from this
[18:20 - 18:23] page to this you have the fourth word
[18:23 - 18:24] then you have the fifth word then you
[18:24 - 18:26] have the sixth word right so these are
[18:26 - 18:28] specifically your tokens and the total
[18:28 - 18:31] number of tokens has been seven now
[18:31 - 18:33] thumb rule right so here also you can
[18:33 - 18:35] see a helpful rule of thumb is that one
[18:35 - 18:37] token generally corresponds to four
[18:37 - 18:39] characters of text
[18:39 - 18:41] okay four characters it is approximate
[18:41 - 18:44] four characters see over here you have
[18:44 - 18:45] six characters I guess seven characters
[18:45 - 18:48] it need not be always four okay as the
[18:48 - 18:52] word becomes bigger let's say I will say
[18:52 - 18:54] capitals okay or I will use some more
[18:54 - 18:56] words now here you can see automatically
[18:56 - 19:00] it is doing the tokenization right so it
[19:00 - 19:02] depends on this specific word and the
[19:02 - 19:04] word that we are specifically using okay
[19:04 - 19:12] uh let's say I like to eat burgers and
[19:12 - 19:15] let's say so here you can see
[19:15 - 19:18] I will just write that as Burger
[19:18 - 19:21] now for in the case of burgers and see
[19:21 - 19:23] and has been taken as a separate token
[19:23 - 19:25] and this entire word has been taken as a
[19:25 - 19:28] separate token right so this token
[19:28 - 19:31] Nigerian is basically done by the open
[19:31 - 19:35] AIP itself isn't it amazing so over here
[19:35 - 19:37] it has basically taken the input
[19:37 - 19:40] uh sentence or prompt as seven tokens
[19:40 - 19:41] let us divided this into seven tokens
[19:41 - 19:45] and it is returning right the completion
[19:45 - 19:46] token basically means the output it is
[19:46 - 19:48] returning so if you probably go ahead
[19:48 - 19:49] and
[19:49 - 19:52] copy this over here and paste it over
[19:52 - 19:53] here
[19:53 - 19:54] right like this
[19:54 - 19:56] here eight are coming right so if you
[19:56 - 19:59] probably add this two sentence two line
[19:59 - 20:00] sentences
[20:00 - 20:02] so here you can basically see somewhere
[20:02 - 20:04] around 10 or 12 tokens will be coming up
[20:04 - 20:06] okay
[20:06 - 20:07] so that is the reason why I am saying
[20:07 - 20:09] you when it is probably taken this
[20:09 - 20:11] entire sentence you will be able to see
[20:11 - 20:14] that it is being the completion token
[20:14 - 20:16] the output token is number of it's It's
[20:16 - 20:18] considering as 10 right that basically
[20:18 - 20:20] means the output is considering of 10
[20:20 - 20:23] tokens which is form which is basically
[20:23 - 20:25] representing this entire sentence right
[20:25 - 20:27] so the total number of tokens is nothing
[20:27 - 20:30] but input plus this is equal to 17 okay
[20:30 - 20:33] now let me do one thing okay
[20:33 - 20:36] here there is also one parameter which
[20:36 - 20:39] is called as Max token
[20:39 - 20:44] okay Max token is equal to 25. okay
[20:44 - 20:47] uh let me change the question
[20:47 - 20:49] explain
[20:49 - 20:52] machine learning
[20:52 - 20:56] to a five years old okay and Max token
[20:56 - 20:58] is equal to 25 now see
[20:58 - 21:02] oh Max token okay Max token is Max
[21:02 - 21:04] tokens it should be I guess let's see
[21:04 - 21:08] okay the the parameter was Max tokens
[21:08 - 21:10] over here now what it what I am saying
[21:10 - 21:12] right over here so let us say this is my
[21:12 - 21:14] question explain machine learning to a
[21:14 - 21:16] five years old so this becomes my input
[21:16 - 21:19] prompt right now my output prompt it is
[21:19 - 21:22] saying that I ha the maximum number of
[21:22 - 21:25] uh tokens that can come in my output
[21:25 - 21:27] sentence is 25 so that is the reason you
[21:27 - 21:29] can see machine learning is a process of
[21:29 - 21:31] teaching computers to do on their own
[21:31 - 21:33] this is there till 22 tokens you can see
[21:33 - 21:36] over here right how I am saying 22 C 12
[21:36 - 21:40] 22 and total is 34. let's say that if I
[21:40 - 21:41] make it to 10
[21:41 - 21:44] right default is 15 I guess right 15 or
[21:44 - 21:46] 16. so here you will be able to see
[21:46 - 21:47] machine learning is a way to make
[21:47 - 21:50] computers that's it the maximum number
[21:50 - 21:51] of tokens that I'd actually put in the
[21:51 - 21:53] outside uh in the output is 10 so that
[21:53 - 21:55] is the reason it is just showing in this
[21:55 - 21:57] many words right so this is an example
[21:57 - 22:00] of the completion API here specifically
[22:00 - 22:02] you can see that
[22:02 - 22:03] um
[22:03 - 22:06] uh Max tokens is there right with
[22:06 - 22:08] respect to this and here I can also say
[22:08 - 22:10] that okay act as a
[22:10 - 22:16] act as an AI assistant right and explain
[22:16 - 22:18] machine learning to a five years old
[22:18 - 22:20] right so here you will be able to see
[22:20 - 22:22] machine learning is this this this uh
[22:22 - 22:25] finished region is length now see before
[22:25 - 22:27] the Finish region was stop but now it is
[22:27 - 22:29] saying length because the maximum number
[22:29 - 22:31] of tokens has got reached specifically
[22:31 - 22:34] that limit has been reached okay so this
[22:34 - 22:36] was just an example with respect to this
[22:36 - 22:38] along with this you know I will just
[22:38 - 22:40] copy this and show you some more
[22:40 - 22:43] examples okay
[22:43 - 22:45] act as an AI system explain machine
[22:45 - 22:47] learning to a five years old the max
[22:47 - 22:49] tokens let's say I am going to give it
[22:49 - 22:52] to 25 now along with this I will be
[22:52 - 22:53] using a temperature parameter now
[22:53 - 22:55] temperature parameter usually is set
[22:55 - 22:59] between 0 to 1. if it is zero right the
[22:59 - 23:01] model is not going to take any risk and
[23:01 - 23:03] it is going to give the same kind of
[23:03 - 23:05] answer which will be the best answer
[23:05 - 23:08] right in the case as we go towards one
[23:08 - 23:11] now the model will just not be biased
[23:11 - 23:12] towards the agent it will definitely see
[23:12 - 23:15] multiple reasons it will probably try to
[23:15 - 23:18] see multiple outputs and whichever is
[23:18 - 23:19] the best output will keep on giving that
[23:19 - 23:21] right and in the case of that you know
[23:21 - 23:24] you you will be able to see that always
[23:24 - 23:26] will not be getting the biased results
[23:26 - 23:28] right so that is the reason we set up
[23:28 - 23:30] this specific temperature let's say I'm
[23:30 - 23:32] setting up to 0.6 okay
[23:32 - 23:34] and now I will also give one more
[23:34 - 23:36] parameter n right so here what I am
[23:36 - 23:37] doing
[23:37 - 23:39] I am saying that act as an AI system
[23:39 - 23:41] explain machine learning to a five year
[23:41 - 23:44] old the max token is this this okay so I
[23:44 - 23:46] will go ahead and execute this so here
[23:46 - 23:48] you will be able to see now this
[23:48 - 23:51] temperature values so and so the N is
[23:51 - 23:52] equal to 5 basically says that I am
[23:52 - 23:54] going to get 5 outputs so this is my
[23:54 - 23:57] first output this is my second output
[23:57 - 23:59] this is my third output
[23:59 - 24:01] this is my fourth output and like this
[24:01 - 24:03] one more output is over here okay so
[24:03 - 24:05] here you will be able to see all the
[24:05 - 24:07] outputs itself right and this is what I
[24:07 - 24:09] am specifically getting now why we are
[24:09 - 24:11] using this n parameter see I can
[24:11 - 24:13] probably say act as an AI assistant and
[24:13 - 24:16] explain machine learning to a five years
[24:16 - 24:20] old in three different ways
[24:20 - 24:22] if I write like this that basically
[24:22 - 24:24] means I will be getting three different
[24:24 - 24:25] outputs right over here machine learning
[24:25 - 24:27] is the process of this this this is done
[24:27 - 24:30] by using algorithms so three different
[24:30 - 24:32] ways three ways I will probably be able
[24:32 - 24:34] to give or let me just change this
[24:34 - 24:37] question a little bit okay
[24:37 - 24:43] um top four famous cities
[24:43 - 24:44] in the world
[24:44 - 24:47] ok so if I probably execute this and let
[24:47 - 24:50] me see the output how it will come okay
[24:50 - 24:53] so here you will be able to see New York
[24:53 - 24:57] London Paris Tokyo right so top four
[24:57 - 24:59] famous cities in the world right so if I
[24:59 - 25:01] probably remove this top cities in the
[25:01 - 25:03] world and if I probably try to keep n is
[25:03 - 25:05] equal to 4. now what is the problem with
[25:05 - 25:07] the previous output everything is in one
[25:07 - 25:10] place just in one text so I have to
[25:10 - 25:11] probably write more python code to split
[25:11 - 25:13] all these values and probably display it
[25:13 - 25:15] in separate field now if I probably go
[25:15 - 25:18] and write in this way so here you'll be
[25:18 - 25:19] able to see all the information Tokyo
[25:19 - 25:22] Japan New York this then again with the
[25:22 - 25:23] most billionaire some information is
[25:23 - 25:25] there some information is here in
[25:25 - 25:27] different different orders you know
[25:27 - 25:29] based on different different reasons a
[25:29 - 25:31] reason okay so here you will be able to
[25:31 - 25:33] see the top cities in the world okay so
[25:33 - 25:34] like this you will be able to get
[25:34 - 25:36] different different kind of answers so I
[25:36 - 25:40] can say act as an AI assistant
[25:40 - 25:43] and
[25:43 - 25:46] tell me a poem okay
[25:46 - 25:50] or explain me a poem
[25:50 - 25:51] explain
[25:51 - 25:55] about Ai and
[25:55 - 25:57] Shakespeare word
[25:57 - 26:00] I'm just trying something
[26:00 - 26:03] okay so once this is executed here you
[26:03 - 26:04] will be able to see artificial
[26:04 - 26:06] intelligence is the ability to this this
[26:06 - 26:09] this these are your outputs right now if
[26:09 - 26:11] you really want to get this choices or
[26:11 - 26:13] let's say I will just take n is equal to
[26:13 - 26:16] 1 to make a little bit simpler so if you
[26:16 - 26:18] want to read this text how will you read
[26:18 - 26:20] it so I will take the response
[26:20 - 26:22] I will go ahead and probably talk about
[26:22 - 26:26] the choices so here are my choices
[26:26 - 26:29] right and here you will be able to see 0
[26:29 - 26:32] Let's see I'm able to get this and then
[26:32 - 26:35] I will go ahead and pick up my text
[26:35 - 26:37] right and once you probably print this
[26:37 - 26:39] all the special characters will also go
[26:39 - 26:42] off okay
[26:42 - 26:45] so this is my entire
[26:45 - 26:47] sentence that I'm absolutely getting the
[26:47 - 26:49] output as okay now let me just try some
[26:49 - 26:53] more amazing things for you so that you
[26:53 - 26:54] will be able to uh see different
[26:54 - 26:57] different queries and all and what
[26:57 - 26:58] capabilities specifically this
[26:58 - 27:01] completion API has right whenever I say
[27:01 - 27:03] completion API this is just a text API
[27:03 - 27:05] okay so here is one more example and
[27:05 - 27:06] this time I will use some different
[27:06 - 27:08] model okay so here you will be able to
[27:08 - 27:10] see response open AI completion create
[27:10 - 27:13] text DaVinci zero zero three I've used
[27:13 - 27:15] act as an AI model to detect positive or
[27:15 - 27:17] negative tweets the person is bad and is
[27:17 - 27:19] biased towards negative sentiments so I
[27:19 - 27:21] have written this right now see this is
[27:21 - 27:22] what is prompt engineering okay so I
[27:22 - 27:27] have told the model to act as a AI model
[27:27 - 27:29] to detect positive or negative tweets so
[27:29 - 27:30] this person is bad in his bias towards
[27:30 - 27:32] negative sentiments the number of Max
[27:32 - 27:34] tokens that I've used is 10 temperatures
[27:34 - 27:36] one I want just one response let's see
[27:36 - 27:39] whether it is positive or negative okay
[27:39 - 27:41] that's it I was just one I've just told
[27:41 - 27:43] the AI model to detect positive or
[27:43 - 27:45] negative to it so that's it so
[27:45 - 27:48] let's see so here you can see it is
[27:48 - 27:50] nothing but negative sentiment the
[27:50 - 27:52] output is negative sentiment right isn't
[27:52 - 27:54] it amazing like this you can probably do
[27:54 - 27:57] a lot of things okay I will probably try
[27:57 - 28:00] to copy and paste it over here uh act as
[28:00 - 28:03] an AI model to
[28:03 - 28:05] Translate
[28:05 - 28:07] language
[28:07 - 28:11] to translate
[28:11 - 28:13] text to
[28:13 - 28:15] French okay
[28:15 - 28:24] so let's say I am writing over here
[28:24 - 28:26] hello
[28:26 - 28:30] how are you okay something like this
[28:30 - 28:31] hello how are you
[28:31 - 28:35] let's see whether it works fine or not
[28:35 - 28:37] so automatically you'll be able to see
[28:37 - 28:40] bonjour comment all zones I think it is
[28:40 - 28:42] fine I guess right act as an AI model to
[28:42 - 28:45] detect or to translate text to French
[28:45 - 28:46] okay
[28:46 - 28:49] I am able to get the output right so
[28:49 - 28:51] even just by using this kind of models
[28:51 - 28:53] now just imagine guys before we using
[28:53 - 28:55] machine learning to train this model to
[28:55 - 28:57] take the data how much effort it used to
[28:57 - 28:59] take we probably if you're using deep
[28:59 - 29:02] learning models we have to probably use
[29:02 - 29:05] it and uh you know based on that only
[29:05 - 29:07] all the expenses usually comes now the
[29:07 - 29:09] expenses becomes very negligible because
[29:09 - 29:13] the token see over here open AI API
[29:13 - 29:16] charges based on tokens right based on
[29:16 - 29:18] token solid charges like how much tokens
[29:18 - 29:20] is specifically use and if it is point
[29:20 - 29:23] zero zero zero two dollars per token
[29:23 - 29:25] that imagine like if you probably have
[29:25 - 29:27] thousand tokens also hardly one or two
[29:27 - 29:30] rupee it is right so it is very much
[29:30 - 29:32] feasible to specifically use this and
[29:32 - 29:34] that is what is the importance of all
[29:34 - 29:36] these things right because it is not
[29:36 - 29:38] going to take a job it is not like
[29:38 - 29:40] everything is going to get automated but
[29:40 - 29:42] it is also going to help you it is going
[29:42 - 29:44] to help you in performing most of your
[29:44 - 29:47] tasks in an easy way right so and only
[29:47 - 29:49] thing that you specifically require in
[29:49 - 29:51] this is about obviously
[29:51 - 29:54] what do you require in this just Python
[29:54 - 29:55] programming language and you should
[29:55 - 29:56] definitely know how to use the API
[29:56 - 29:58] itself so this was about the completion
[29:58 - 30:00] API you know perform different different
[30:00 - 30:03] types of type of task uh
[30:03 - 30:06] it is up to you just be much more
[30:06 - 30:07] creative with respect to this kind of
[30:07 - 30:10] prompts and use it okay now let's talk
[30:10 - 30:13] about the chart completion API itself uh
[30:13 - 30:15] because chat completion API is also
[30:15 - 30:18] important from the day uh that you have
[30:18 - 30:20] specifically chat through your GPT 3.5
[30:20 - 30:24] and GPT 4. these models that you will be
[30:24 - 30:26] able to see this is only used in chat
[30:26 - 30:28] completion API right so I'll just give
[30:28 - 30:30] you an idea about how to specifically
[30:30 - 30:33] use chat completion API so here I'm just
[30:33 - 30:37] going to write chart completion API and
[30:37 - 30:41] here I will say openai dot
[30:41 - 30:45] chat completion dot create and here I'm
[30:45 - 30:47] basically going to provide what is first
[30:47 - 30:49] thing that I'm going to provide is
[30:49 - 30:51] obviously my model name and now after I
[30:51 - 30:53] provide my model and let's say I will be
[30:53 - 30:55] using this one which is very good and
[30:55 - 30:57] you can see Max tokens you can allow
[30:57 - 31:00] only this much so here I'm basically
[31:00 - 31:02] going to use this now the next thing
[31:02 - 31:05] that we specifically provide is messages
[31:05 - 31:07] now messages will be in the form of key
[31:07 - 31:11] value pairs the first message that you
[31:11 - 31:15] specifically specify over here is
[31:15 - 31:17] um a kind of role first of all you
[31:17 - 31:20] specify a role let's say if the role is
[31:20 - 31:23] assistant or is the role is system
[31:23 - 31:25] because there are three kinds of role
[31:25 - 31:26] which I will discuss and one more role
[31:26 - 31:28] which has been recently added which is
[31:28 - 31:29] called as function calling I will also
[31:29 - 31:33] talk about it and the next field that I
[31:33 - 31:35] specifically specifies content okay so
[31:35 - 31:39] let's say I say act as an
[31:39 - 31:44] AI assistant okay act as an AI assistant
[31:44 - 31:47] okay so this is my
[31:47 - 31:49] now as soon as I probably write this
[31:49 - 31:52] role is equal to system and content as
[31:52 - 31:54] at is an AI assistant whenever we see a
[31:54 - 31:56] roll as system that basically means I'm
[31:56 - 31:59] telling the agent to probably act as an
[31:59 - 32:02] AI assistant right the next role that
[32:02 - 32:04] you can probably provide over here is
[32:04 - 32:06] that whenever you specifically Define
[32:06 - 32:11] any kind of role I can copy this
[32:11 - 32:13] I can paste it over here
[32:13 - 32:15] right the next role that we specifically
[32:15 - 32:17] say is something called as user
[32:17 - 32:19] and in the user let's say I am asking a
[32:19 - 32:23] question hello
[32:23 - 32:26] how are you right
[32:26 - 32:29] right now once I use this
[32:29 - 32:30] and let's say what is the output that I
[32:30 - 32:32] get
[32:32 - 32:36] so here it is using the gbt 3.5 Turbo
[32:36 - 32:38] and whenever we say chart completion API
[32:38 - 32:40] it is a conversational API that
[32:40 - 32:41] basically means you will be able to
[32:41 - 32:42] append this number of messages many
[32:42 - 32:44] number of time very much suitable for
[32:44 - 32:47] chat Bots itself so here the output you
[32:47 - 32:49] will be able to see the role is
[32:49 - 32:51] assistant so whenever you get any output
[32:51 - 32:55] right from a agent from a model that is
[32:55 - 32:57] specifically in the form of role right
[32:57 - 32:59] role is equal to assistant and then you
[32:59 - 33:00] have content hello I am an AI assistant
[33:00 - 33:02] so I don't have any personal feelings I
[33:02 - 33:04] am here to help you how can I assist you
[33:04 - 33:06] today so all this information is
[33:06 - 33:09] basically given from the uh from the
[33:09 - 33:12] from this specific model that is GPT 3.5
[33:12 - 33:14] turbo okay now here you can understand
[33:14 - 33:17] that what is the similar difference what
[33:17 - 33:18] is the differences between this
[33:18 - 33:20] completion API here we just used to give
[33:20 - 33:22] one prompt here you can give n number of
[33:22 - 33:24] messages and you can append the specific
[33:24 - 33:27] messages as you like okay and N number
[33:27 - 33:28] of so after this also you can probably
[33:28 - 33:31] write one more question so that context
[33:31 - 33:34] will be remembered from this uh for for
[33:34 - 33:36] this API right that context will be
[33:36 - 33:39] entirely remembered okay so let's say I
[33:39 - 33:41] will give you an idea about it
[33:41 - 33:43] okay
[33:43 - 33:45] I will just say
[33:45 - 33:47] I'll ask you this question see
[33:47 - 33:52] I'll say role as a user my age is
[33:52 - 33:55] 33 and
[33:55 - 33:56] uh
[33:56 - 34:02] I am a data scientist let's say
[34:02 - 34:05] okay so this is my question so this is
[34:05 - 34:07] my next input that I am probably giving
[34:07 - 34:09] and after this what I will do I will
[34:09 - 34:11] write one more role and I'll ask a
[34:11 - 34:12] question
[34:12 - 34:15] what is my age let's say
[34:15 - 34:20] what is my age right so now it is going
[34:20 - 34:22] to give me this specific answer as an
[34:22 - 34:24] assistant okay I've I've put that
[34:24 - 34:26] information my age is 33 and I am a data
[34:26 - 34:28] scientist just to give some info to this
[34:28 - 34:30] chat CPT this is sorry GPD 3.5 turbo
[34:30 - 34:32] okay so here you will be able to see
[34:32 - 34:34] based on the information you provided
[34:34 - 34:37] your age is 33 now see it is being able
[34:37 - 34:39] to remember this context and N number of
[34:39 - 34:41] messages I can probably append because
[34:41 - 34:43] at the end of the day this part model is
[34:43 - 34:45] making sure that all the information is
[34:45 - 34:47] basically utilized in terms of context
[34:47 - 34:50] right so that is why this chart
[34:50 - 34:52] completion API is quite amazing and you
[34:52 - 34:55] should definitely use it right so this
[34:55 - 34:57] is what is about this one and probably I
[34:57 - 35:00] can also do one thing is that
[35:00 - 35:03] whenever you are trying to use this
[35:03 - 35:05] always make sure that because this this
[35:05 - 35:07] this message is that you're appending
[35:07 - 35:09] this will play a very important role
[35:09 - 35:10] when we are probably discussing about
[35:10 - 35:12] function calling and that I will
[35:12 - 35:14] probably take in my next video but just
[35:14 - 35:16] to give you an idea how things happen
[35:16 - 35:19] this is the most two important apis that
[35:19 - 35:22] we specifically use completion and uh
[35:22 - 35:25] chat completion the models that you can
[35:25 - 35:26] probably play with you can probably use
[35:26 - 35:28] any of the specific models and use it
[35:28 - 35:31] right so uh try to use it try to try
[35:31 - 35:34] practice it you know because as we go
[35:34 - 35:36] ahead more and more different examples
[35:36 - 35:38] will definitely come up with and I
[35:38 - 35:41] really want uh I will probably give you
[35:41 - 35:43] every tutorial about this how things
[35:43 - 35:45] will be how things are not you know how
[35:45 - 35:46] you can probably convert this into an
[35:46 - 35:48] end-to-end model how you can probably do
[35:48 - 35:50] fine tuning but we will go step by step
[35:50 - 35:53] we'll try to understand it okay a couple
[35:53 - 35:55] of questions always remember that that
[35:55 - 35:57] you have charge APD 3.5 sorry gbt 3.5
[35:57 - 36:00] gbt 4.0 that is only used for chart
[36:00 - 36:02] completion API right
[36:02 - 36:04] so yes this was it from my side I hope
[36:04 - 36:06] you like this particular video more
[36:06 - 36:07] tutorials are going to come as we go
[36:07 - 36:08] ahead
[36:08 - 36:10] um I don't want to make it a very long
[36:10 - 36:13] tutorial so that you will be with me as
[36:13 - 36:14] we discuss as we keep on discussing in
[36:14 - 36:16] the next video we are going to discuss
[36:16 - 36:17] about function calling with the chat
[36:17 - 36:21] completion API right now if let's say if
[36:21 - 36:23] you are having a third party API right
[36:23 - 36:26] and from the third party API also if you
[36:26 - 36:28] just give that Json right automatically
[36:28 - 36:30] the open AI API itself will be able to
[36:30 - 36:31] read that particular Json and will be
[36:31 - 36:33] able to give you the information so yes
[36:33 - 36:35] this was it for my side I will see you
[36:35 - 36:36] all in the next video have a great day
[36:36 - 36:39] thank you take care bye